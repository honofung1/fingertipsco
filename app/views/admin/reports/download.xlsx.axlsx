# frozen_string_literal: true

wb = xlsx_package.workbook
# Need to discuss
xlsx_package.use_autowidth = false
default_column_width = 20

# https://github.com/randym/axlsx/blob/master/lib/axlsx/workbook/worksheet/page_setup.rb#L49
# https://github.com/caxlsx/caxlsx/blob/master/lib/axlsx/workbook/worksheet/page_setup.rb
# A4 paper size = 9
# scale set to 50 to fit the one page print
wb.add_worksheet(page_setup: { paper_size: 9, scale: 50 }) do |sheet|
  style = @result.report_style(sheet)

  # It is optional for the report
  if @result.report_title.present?
    logger.debug("REPORT TITLE: #{@result.report_title}")
    @result.report_title.map do |_, titles|
      logger.debug("TITLE: #{titles}")
      sheet.add_row do |row|
        titles.each do |_, ele|
          merge_cell_size = ele[:merge_cell_size]
          merge_cell_data = ele[:merge_cell_data].to_a

          ele[:offset].times { row.add_cell } if ele[:offset].present?

          sheet.merge_cells(merge_cell_size)

          # IF not setting the title tyle, fallback to the default style
          title_style = style[ele[:title_style]] || style[:title]

          merge_cell_data.each do |data|
            # TODO: FIX the border only exist in the first cell problem
            # https://github.com/randym/axlsx/issues/261
            row.add_cell(data, style: title_style)
          end
        end
      end
      sheet.add_row
    end
  end
  # End of optional report title

  # TEMP refactor for the styling
  # sheet.add_row(@result.headers, style: style[:header])
  sheet.add_row do |row|
    @result.headers.each_with_index do |header, index|
      row.add_cell(header, style: style[@result.cols_style[index]])
    end
  end

  # TEMP refactor for the styling
  # @result.data.each do |row|
  #   sheet.add_row(@result.get_csv_row_array_from_row(row), types: @result.cols_data_type, style: style[:text])
  # end
  @result.data.each do |row_data|
    sheet.add_row do |row|
      @result.get_csv_row_array_from_row(row_data).each_with_index do |data, index|
        row.add_cell(data, types: @result.cols_data_type[index], style: style[@result.cols_style[index]])
      end
    end
  end

  @result.headers.count.times do |index| # prevent auto hide in open xlsx file in Excel
    sheet.column_info[index].width = default_column_width if sheet.column_info[index].present? && sheet.column_info[index].width.nil?
  end
end

xlsx_package.serialize(@file_name)
